{"version":3,"sources":["assets/textures/wormhole.jpg","assets/textures/cloud.png","components/wormhole/wormhole.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","assets/example.gif","components/section/sub/dounuts.js","components/section/sub/token_banners.js","components/section/sub/partners.js","components/section/footer.js","components/galaxy/galaxy.js","App.js","reportWebVitals.js","index.js"],"names":["Wormhole","props","useLoader","TextureLoader","WormholeMap","CloudsMap","wormholeMap","cloudMap","wormholeRef","useRef","cloudsRef","starRef","useFrame","elapsedTime","clock","getElapsedTime","current","rotation","y","z","intensity","color","position","Stars","ref","radius","depth","count","factor","saturation","fade","args","map","opacity","depthWrite","transparent","metalness","roughnes","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","styled","div","TokenBanners","className","to","href","src","width","alt","Partners","style","fontFamily","marginBottom","Footer","fontSize","fontWeight","textAlign","margin","display","parameters","Galaxy","useMemo","positions","colors","i","x","Math","random","branchAngle","branches","PI","spinAngle","spin","randomX","pow","randomnessPower","randomY","randomZ","sin","cos","colorInside","THREE","insideColor","colorOutside","outsideColor","mixedColor","clone","lerp","r","g","b","Float32Array","attrib","galaxyRef","attach","attachObject","length","array","itemSize","vertexColors","size","sizeAttenuation","randomness","Dolly","camera","HTMLContent","Html","center","Loading","App","colorManagement","fov","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af7bd156.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wormhole.98df762f.jpg\";","export default __webpack_public_path__ + \"static/media/cloud.23a7ff3a.png\";","import React, { useRef } from \"react\";\r\nimport WormholeMap from '../../assets/textures/wormhole.jpg';\r\nimport CloudsMap from '../../assets/textures/cloud.png';\r\nimport { TextureLoader } from \"three\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\nimport { Stars } from '@react-three/drei';\r\n\r\n\r\nexport function Wormhole(props){\r\n\r\n    const [wormholeMap, cloudMap] = useLoader(TextureLoader, [WormholeMap, CloudsMap]);\r\n    \r\n    const wormholeRef = useRef();\r\n    const cloudsRef = useRef();\r\n    const starRef = useRef();\r\n\r\n\r\n    useFrame(({ clock }) => {\r\n        const elapsedTime = clock.getElapsedTime();\r\n    \r\n        wormholeRef.current.rotation.y = elapsedTime / 2;\r\n        wormholeRef.current.rotation.z = elapsedTime / 10;\r\n        cloudsRef.current.rotation.y = elapsedTime / -2;\r\n        starRef.current.rotation.z = elapsedTime / -20;\r\n\r\n      });\r\n\r\n    return (\r\n    <>\r\n        <ambientLight intensity={0.3} />\r\n        <pointLight color=\"#f6f3ea\" position={[10, 0, 10]} intensity={5} />\r\n        <Stars ref={starRef} radius={300} depth={60} count={20000} factor={7} saturation={0} fade={true} />\r\n        <mesh ref={cloudsRef} position={[0, 0, 0]} >\r\n            <sphereGeometry args={[2.25, 32, 32]} />\r\n            <meshPhongMaterial\r\n            map={cloudMap}\r\n            opacity={1}\r\n            depthWrite={true}\r\n            transparent={true}\r\n            />\r\n        </mesh>\r\n        <mesh ref={wormholeRef} position={[0, 0, 0]}>\r\n            <sphereGeometry args={[1.8, 32, 32]} />\r\n            <meshStandardMaterial map={wormholeMap} metalness={0.98} roughnes={0.25} />\r\n        </mesh>\r\n    </>\r\n    );\r\n}","const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/example.cabbb1b4.gif\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Pie } from \"@vx/shape\";\r\nimport { Group } from \"@vx/group\";\r\nimport useDimensions from \"react-use-dimensions\";\r\nimport styled from \"styled-components\";\r\nimport { LegendItem, LegendLabel, LegendOrdinal } from \"@vx/legend\";\r\nimport { scaleOrdinal } from \"@vx/scale\";\r\n\r\nconst value = d => d.value;\r\n\r\nconst colors = [\r\n  \"#003f5c\",\r\n  \"#2f4b7c\",\r\n  \"#665191\",\r\n  \"#a05195\",\r\n  \"#d45087\",\r\n  \"#f95d6a\",\r\n  \"#ff7c43\",\r\n  \"#ffa600\"\r\n];\r\n\r\nfunction degreesToRadians(degrees) {\r\n  return degrees * (Math.PI / 180);\r\n}\r\n\r\nconst ChartWrapper = styled.div`\r\n  width: 100%;\r\n  height: 350px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport default function PieChart({ data, label }) {\r\n//   const [ref, { width, height }] = useDimensions();\r\n  const width = 300;\r\n  const height = 300;\r\n  const yxMin = Math.min(height === 0 ? width : height, width);\r\n  const centerY = yxMin / 2;\r\n  const centerX = yxMin / 2;\r\n  const radius = Math.min(width, height) / 2;\r\n  const scale = scaleOrdinal({\r\n    domain: data.map(browser => browser.key),\r\n    range: colors\r\n  });\r\n\r\n  return (\r\n    <ChartWrapper height={yxMin}>\r\n      <div>\r\n        <ChartWrapper>\r\n          <svg style={{ width: \"300px\", height: \"300px\", position:'inherit' }}>\r\n            <Group top={centerY} left={centerX}>\r\n              <text\r\n                fill=\"white\"\r\n                x={0}\r\n                y={0}\r\n                fontSize={15}\r\n                fontWeight={500}\r\n                textAnchor=\"middle\"\r\n                fontFamily='monospace'\r\n              >\r\n                {label}\r\n              </text>\r\n              <Pie\r\n                data={data}\r\n                pieValue={value}\r\n                outerRadius={radius * 0.9}\r\n                innerRadius={radius * 0.75}\r\n                startAngle={degreesToRadians(180)}\r\n                endAngle={degreesToRadians(180 + 360)}\r\n                padAngle={0.04}\r\n              >\r\n                {pie => {\r\n                  return pie.arcs.map((arc, i) => {\r\n                    return <PieArc pie={pie} arc={arc} key={i} />;\r\n                  });\r\n                }}\r\n              </Pie>\r\n            </Group>\r\n          </svg>\r\n          <LegendOrdinal\r\n            direction=\"column\"\r\n            scale={scale}\r\n            shape=\"rect\"\r\n            fill={({ datum }) => scale(datum)}\r\n          >\r\n            {labels => {\r\n              return (\r\n                <div style={{ display: \"flex\", flexFlow: \"wrap\", fontFamily: 'monospace', marginTop:'-25px' }}>\r\n                  {labels.map((label, i) => {\r\n                    return (\r\n                      <LegendItem\r\n                        key={`legend-quantile-${i}`}\r\n                        margin={\"0 5px\"}\r\n                        width=\"100%\"\r\n                      >\r\n                        <LegendLabel align={\"left\"} margin={\"0 0 0 4px\"}>\r\n                          <div\r\n                            style={{\r\n                              backgroundColor: label.value,\r\n                              color: \"white\",\r\n                              lineHeight: \"16px\",\r\n                              fontSize: \"10px\",\r\n                              borderRadius: \"5px\",\r\n                              padding: \"0 4px\",\r\n                              margin: \"1px\",\r\n                              fontFamily: 'monospace'\r\n                            }}\r\n                          >\r\n                            {label.text}\r\n                          </div>\r\n                        </LegendLabel>\r\n                      </LegendItem>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            }}\r\n          </LegendOrdinal>\r\n        </ChartWrapper>\r\n      </div>\r\n    </ChartWrapper>\r\n  );\r\n}\r\n\r\nPieChart.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      key: PropTypes.string.isRequired,\r\n      value: PropTypes.number.isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n\r\n// eslint-disable-next-line react/no-multi-comp\r\nfunction PieArc({ arc, pie }) {\r\n  const opacity = 1; // (i + 2);\r\n  return (\r\n    <g>\r\n      <path d={pie.path(arc)} fill={colors[arc.index]} fillOpacity={opacity} />\r\n    </g>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport function TokenBanners() {\r\n  return (\r\n      <div className='container'>\r\n          <div className='row'>\r\n                <div to='' className='banner__wrapper'>\r\n                  <div to='' className='banner__container'>\r\n                     <div className='banner__container-card'>\r\n                        <a href='https://pancakeswap.finance/swap?outputCurrency=0xc79ab5a19dca7f95d78f21084af0151343eb5cf7'>\r\n                          <img src='images/web/pancakeswap.png'  width=\"125px\" alt=''  />\r\n                        </a>\r\n                      </div>\r\n                      <div className='banner__container-card'>\r\n                        <a href='https://bscscan.com/token/0xc79ab5a19dca7f95d78f21084af0151343eb5cf7'>\r\n                          <img src='images/web/bsc.png'  width=\"125px\" alt=''  />\r\n                        </a>\r\n                      </div>\r\n                      <div className='banner__container-card'>\r\n                        <a href='https://www.dextools.io/app/bsc/pair-explorer/0xc79ab5a19dca7f95d78f21084af0151343eb5cf7'>\r\n                          <img src='images/web/dext.png'  width=\"125px\" alt=''  />\r\n                        </a>\r\n                      </div>\r\n\r\n                      <div className='banner__container-card'>\r\n                        <a href='https://poocoin.app/tokens/0xc79ab5a19dca7f95d78f21084af0151343eb5cf7'>\r\n                          <img src='images/web/poocoin.png' width=\"125px\" alt=''  />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport function Partners() {\r\n  return (\r\n      <div className='container'>\r\n        <p className='bottom-space-md' />\r\n        <p style={{'fontSize':'13px', fontFamily:'helvetica', marginBottom:'-20px'}}>PARTNERS & ADVISORS</p>\r\n        <div to='' className='row'>\r\n            <div className='partner__container-card'>\r\n                <img src='images/web/3dmeta_logo.png'  width=\"225px\" alt=''  />\r\n            </div>\r\n            <div className='partner__container-card' >\r\n                <img src='images/web/blockchained_logo.png' width=\"225px\" alt=''  />\r\n            </div>\r\n            <div className='partner__container-card'>\r\n                <img src='images/web/artecture_logo.png'  width=\"225px\" alt=''  />\r\n            </div>\r\n        </div>\r\n        <p className='bottom-space-sm' />\r\n      </div>\r\n  );\r\n}","\r\nimport React  from 'react';\r\nimport { TokenBanners } from './sub/token_banners';\r\nimport { Partners } from './sub/partners';\r\nexport function Footer() {\r\n\r\n  return (\r\n<div className='footer'>\r\n    <p className='bottom-space' />\r\n    <TokenBanners />\r\n    <div className='row' style={{'flexFlow':'column'}}>\r\n        \r\n        <div className='col'>\r\n            <Partners />\r\n        </div>\r\n    </div>\r\n    <div className='row'>\r\n        <div className='col'>\r\n            <h2 style={{fontSize: '20px', fontWeight: '400', textAlign: 'center', margin:'-10px'}}> CONNECT WITH US </h2>\r\n        </div>\r\n    </div>\r\n    <div className='row'>\r\n        <div className='col'>\r\n            <ul>\r\n            <li><a href=\"https://www.twitter.com/cometaclub\">Twitter</a></li>\r\n                <li><a href=\"https://discord.gg/GRQrmvZY8y\">Discord</a></li>\r\n                <li><a href=\"https://t.me/cometaclub\">Telegram</a></li>\r\n                <li>\r\n                    <p style={{fontSize: '20px', margin: '-5px 0px 0px 0px', opacity:1}}>☄️</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div className='row'>\r\n        <div className='col'>\r\n            <p style={{display: 'flex',fontSize: '14px', textAlign: 'center'}}> © Cometa Club & Cosmosapiens. All Rights Reserved.</p>\r\n        </div>\r\n    </div>\r\n    <p className='bottom-space-md' />\r\n    <div className=\"token__container\">\r\n                    <div className='token__container-section'>\r\n                      <h2 style={{display: 'flex',fontSize: '10px', textAlign: 'center'}}>\r\n                      Trading cryptocurrencies carries a high level of risk, and may not be suitable for all investors. \r\n                Before deciding to trade cryptocurrency you should carefully consider your investment objectives, level of experience, and risk appetite.\r\n                The possibility exists that you could sustain a loss of some or all of your initial investment and therefore you should not invest\r\n                 money that you cannot afford to lose. Any opinions, news, research, analyses, prices, or other information contained on this website \r\n                 is provided as general market commentary, and does not constitute investment advice. The Cometa Club team and its affiliates will not \r\n                 accept liability for any loss or damage, including without limitation to, any loss of profit, which may arise directly or \r\n                 indirectly from use of or reliance on such information. All opinions expressed on this site are owned by the respective \r\n                 writer and should never be considered as advice in any form. The Cometa Club team and its affiliates makes no representation or \r\n                 warranties as to the accuracy and or timelines of the information contained herein.\r\n                 A qualified professional should be consulted before making any financial decisions.\r\n                        </h2>\r\n                    </div>\r\n                  </div>\r\n  </div>\r\n  );\r\n}","import React, { useMemo, useRef, useCallback } from \"react\"\r\nimport WormholeMap from '../../assets/textures/wormhole.jpg';\r\nimport CloudsMap from '../../assets/textures/cloud.png';\r\nimport { TextureLoader } from \"three\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\n\r\nconst parameters = {}\r\n\r\nparameters.count = 20000\r\nparameters.size = 0.0025\r\nparameters.radius = 100\r\nparameters.branches = 18\r\nparameters.spin = 0.5\r\nparameters.randomness = 0.95\r\nparameters.randomnessPower = 0.075\r\nparameters.insideColor = '#ff6030'\r\nparameters.outsideColor = '#1b3984'\r\n\r\nexport function Galaxy(props){\r\n\r\n    const [positions, colors] = useMemo(() => {\r\n        let positions = [],\r\n          colors = []\r\n        for (let i = 0; i < parameters.count; i++) {\r\n            //Position\r\n        const x = Math.random() * parameters.radius\r\n        const branchAngle = (i % parameters.branches) / parameters.branches * 2 * Math.PI\r\n        const spinAngle = x * parameters.spin\r\n\r\n        const randomX = Math.pow(Math.random(), parameters.randomnessPower) * (Math.random()<0.5 ? 1: -1) \r\n        const randomY = Math.pow(Math.random(), parameters.randomnessPower) * (Math.random()<0.5 ? 1: -1) \r\n        const randomZ = Math.pow(Math.random(), parameters.randomnessPower) * (Math.random()<0.5 ? 1: -1)\r\n        positions[i*3] = Math.sin(branchAngle + spinAngle) * x + randomX\r\n        positions[i*3 + 1] = randomY\r\n        positions[i*3 + 2] = Math.cos(branchAngle + spinAngle) * x + randomZ\r\n        \r\n        //Color\r\n\r\n        const colorInside = new THREE.Color(parameters.insideColor)\r\n        const colorOutside = new THREE.Color(parameters.outsideColor)\r\n\r\n\r\n        const mixedColor = colorInside.clone()\r\n        mixedColor.lerp(colorOutside, x / parameters.radius)\r\n\r\n        colors[i*3 + 0] = mixedColor.r\r\n        colors[i*3 + 1] = mixedColor.g\r\n        colors[i*3 + 2] = mixedColor.b\r\n\r\n        }\r\n        return [new Float32Array(positions), new Float32Array(colors)]\r\n      }, [parameters.count])\r\n\r\n      const attrib = useRef()\r\n      const galaxyRef = useRef();\r\n\r\n      useFrame(({ clock }) => {\r\n        const elapsedTime = clock.getElapsedTime();\r\n    \r\n        \r\n        galaxyRef.current.rotation.y = elapsedTime / -1;\r\n        galaxyRef.current.rotation.x = elapsedTime / -20;\r\n\r\n      });\r\n\r\n    return (\r\n        <points ref={galaxyRef}>\r\n          <bufferGeometry attach=\"geometry\">\r\n            <bufferAttribute attachObject={[\"attributes\", \"position\"]} count={positions.length / 3} array={positions} itemSize={3} />\r\n            <bufferAttribute ref={attrib} attachObject={[\"attributes\", \"color\"]} count={colors.length / 3} array={colors} itemSize={3} />\r\n          </bufferGeometry>\r\n          <pointsMaterial attach=\"material\" vertexColors size={parameters.size} sizeAttenuation={true} />\r\n        </points>\r\n      );\r\n}","import './App.scss';\r\nimport { Canvas, Dom, useFrame, useThree } from 'react-three-fiber';\r\nimport React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Wormhole } from \"./components/wormhole/wormhole\";\r\nimport { Header } from './components/section/header';\r\nimport { Cosmosapiens } from './components/NFT/cosmosapiens';\r\nimport { Token } from './components/section/token';\r\nimport { Footer } from './components/section/footer';\r\nimport { Landing } from './components/section/landing';\r\nimport { Roadmap } from './components/section/roadmap';\r\nimport { Features } from './components/section/feature';\r\nimport { PODs } from './components/section/PODs';\r\nimport { Galaxy } from './components/galaxy/galaxy';\r\nimport { Html } from '@react-three/drei';\r\n\r\nfunction Dolly() {\r\n  // This one makes the camera move in and out\r\n  useFrame(({ clock, camera }) => {\r\n    camera.position.z = 20 + Math.sin(clock.getElapsedTime()) * 2\r\n    camera.position.y = 30 + Math.sin(clock.getElapsedTime()) * 16\r\n    // camera.rotation.y = Math.sin(clock.getElapsedTime()) * 0.25\r\n  })\r\n  return null\r\n}\r\n\r\nconst HTMLContent = () => {\r\n  return(\r\n        <group position={[0,-4,0]}>\r\n          <mesh position={[0,0,0]}>\r\n          </mesh>\r\n          <Html center>\r\n            <div className='drei-container'>\r\n            \r\n            </div>\r\n          </Html>\r\n        </group>\r\n  );\r\n};\r\n\r\nconst Loading = () => {\r\n  return(\r\n        <Html center>\r\n          <div className='loader'>\r\n            <h3>Loading</h3>\r\n            <div className=\"planet\"></div>\r\n          </div>\r\n      </Html>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className='screen'>\r\n      <div className='main'>\r\n      </div>\r\n      <Footer />\r\n      <div className='canvas darkBg'>\r\n        \r\n          <Canvas colorManagement camera={{position:[0,30,50], fov: 100}} >\r\n            <Suspense fallback={<Loading />}>\r\n                <HTMLContent />\r\n                <Wormhole />\r\n                <Dolly />\r\n                <Galaxy />\r\n            </Suspense>\r\n          </Canvas>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}